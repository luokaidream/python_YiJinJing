# -*- coding:UTF-8 -*-
# Author: LuoKai
# date = 2021/1/16

# 闭包，很重要的概念， 前面我们知道函数可以被当参数传入参数，当然函数也可以当成返回值返回，同时函数内部也可以定义一个函数


def func(x):
    def inner(n):  # 嵌套定义了 inner_func
        return x + n  # 注意这里inner使用了外部变量x

    return inner  # 返回内部函数，并不是调用，记住没有小括号，带括号表示调用函数


f01 = func(2)  # 这里的f01 是func()调用得到的返回值inner函数
f02 = f01(3)  # 这里f02才是得到inner()的调用结果，注意这里仍然使用了外部的变量X，说明X被保留了
print(f02)

"""
解释下上面的函数
1: 定义个func函数，函数内部再次定义个inner函数
2: func函数返回值 是内部函数
3: 内部函数使用了外部变量X

调用时:
func(2)得到得返回值 其实是内部函数 inner， 所以f01=inner
当调用f01(3)时，其实就是调用内部函数inner(3)
inner函数 返回x 和 n 就分别是 和 3，返回值是5

上面就是一个闭包函数，闭包概念如下:
一个函数返回了一个内部函数，该内部函数引用了外部函数的相关参数和变量，我们把该返回的内部函数称为闭包（Closure）。
例子中中的外部变量就是x
"""
